{"version":3,"sources":["redux/store.js","components/Personal.js","components/InputSelect.js","components/InputValue.js","components/InputSelectConvert.js","components/InputValueConvert.js","components/Button.js","components/ConvertMoney.js","components/Convert.js","API_fromServer.js","App.js","index.js"],"names":["setValueConvert","value","type","store","createStore","state","action","valueMoney","ccy","valueConvert","result","toFixed","ccyConvert","obj","objBaseCcy","connect","dispatch","prepeared","map","a","i","forEach","element","base_ccy","React","useState","columns","title","field","lookup","data","setState","console","log","editable","onRowAdd","newData","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","menu","InputSelect","classes","className","noValidate","autoComplete","TextField","id","disabled","SelectProps","MenuProps","margin","setValue","selectors","onChange","event","target","label","variant","setCcy","currency","setCurrency","select","helperText","option","MenuItem","key","sale","button","handleClickChange","Button","color","endIcon","Icon","onClick","all","InputSelectConvert","InputValueConvert","Paper","MenuList","to","activeClassName","ListItemIcon","Typography","path","render","getApi","fetch","response","json","App","this","props","loadDataValue","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b0317fff.chunk.js","sourcesContent":["import { createStore} from 'redux';\n\n\nconst SET_DATAMONEY = 'SET_DATAMONEY';\nconst SET_VALUEMONEY = 'SET_VALUEMONEY';\nconst SET_VALUEMONEY_CONVERT = 'SET_VALUEMONEY_CONVERT';\nconst SET_VALUE = 'SET_VALUE';\nconst SET_VALUE_CONVERT = 'SET_VALUECONVERT';\nconst SET_BUTTON = 'SET_BUTTON';\n\nexport const setDataMoney = valueMoney => ({ type: SET_DATAMONEY, valueMoney });\nexport const setValueMoney = ccy => ({ type: SET_VALUEMONEY, ccy });\nexport const setValueMoneyConvert = ccy => ({ type: SET_VALUEMONEY_CONVERT, ccy });\nexport const setValue = value => ({ type: SET_VALUE, value });\nexport const setValueConvert = value => ({ type: SET_VALUE_CONVERT, value });\nexport const handleClick = () => ({ type: SET_BUTTON });\n\n\nconst initialState = {\n  valueMoney: [],\n  ccy: 0,\n  ccyConvert: 0,\n  value: 0,\n  valueConvert: 'EUR',\n  result: 0,\n}\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case SET_DATAMONEY:\n      return {\n        ...state,\n        valueMoney: action.valueMoney,\n      }\n    case SET_VALUEMONEY:\n      return {\n        ...state,\n        ccy: +action.ccy,\n      }\n    case SET_VALUE:\n      return {\n        ...state,\n        value: +action.value,\n      }\n    case SET_VALUE_CONVERT:\n      return {\n        ...state,\n        valueConvert: +action.value,\n      }\n    case SET_BUTTON:\n      const number = state.valueConvert * state.value;\n      return {\n        ...state,\n        result: number.toFixed(2),\n      }\n\n   default:\n    return state;\n  }\n }\n\nconst store = createStore(\n  rootReducer, \n  initialState,\n);\n\nexport default store;","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { connect } from 'react-redux';\n\nlet obj = {}\nlet objBaseCcy = {}\n\nconst Personal = ({valueMoney}) => {\n const prepeared = valueMoney.map((a, i) => ({\n  ...a,\n  value: i, \n}))\nprepeared.forEach((element, i) => (\n  obj[i] = element.ccy\n ));\n\n prepeared.forEach((element, i) => (\n  objBaseCcy[i] = element.base_ccy\n ));\n\n  const [state, setState] = React.useState({\n    columns: [\n     {\n      title: 'Value',\n      field: 'value',\n      lookup: obj,\n    },\n    {\n      title: 'Value',\n      field: 'value',\n      lookup: objBaseCcy,\n    },\n      { title: 'Sale', field: 'sale' },\n      { title: 'Buy', field: 'buy', type: 'numeric' },\n  \n    ],\n    data: prepeared,\n  });\n  console.log(valueMoney);\n  return (\n    <MaterialTable\n      title=\"Languages value\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data.push(newData);\n              setState({ ...state, data });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data[data.indexOf(oldData)] = newData;\n              setState({ ...state, data });\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...state.data];\n              data.splice(data.indexOf(oldData), 1);\n              setState({ ...state, data });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n valueMoney: state.valueMoney,\n result: state.result,\n // all: state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Personal);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst InputSelect = () => { \n  \n  const classes = useStyles();\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n       <TextField\n          id=\"standard-select-currency\"\n          // label=\"UAH\"\n          className={classes.textField}\n          value={'₴'}\n          disabled\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          margin=\"normal\"\n        >'EUR'\n        </TextField>\n       </form>\n    );\n}\nexport default  InputSelect;","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport * as selectors from '../redux/store';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst InputValue = ({setValue}) => {\n // const [currencyValue, setCurrencyValue] = useState('EUR');\n  const classes = useStyles();\n  const handleChange = event => {\n   // setCurrencyValue(event.target.value);\n   setValue(event.target.value);\n };\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n       <TextField\n          onChange={handleChange}\n          id=\"outlined-search\"\n          label=\"Your current UAH\"\n          type=\"number\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n    </form>\n  )\n}\n\nconst mapStateToProps = state => ({\n valueMoney: state.valueMoney,\n});\n\nconst mapDispatchToProps = dispatch => ({\n setValue: value => dispatch(selectors.setValue(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputValue);","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport * as selectors from '../redux/store';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst InputSelect = ({ \n  valueMoney,\n  setCcy,\n}) => { \n  const classes = useStyles();\n  const [currency, setCurrency] = useState('EUR');\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n    setCcy(event.target.value);\n  };\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n       <TextField\n          id=\"standard-select-currency\"\n          select\n          label=\"Select\"\n          className={classes.textField}\n          value={currency}\n          onChange={handleChange}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText=\"Please select your currency\"\n          margin=\"normal\"\n        >\n          {valueMoney ? valueMoney.map(option => (\n            <MenuItem \n              key={option.ccy} \n              value={option.sale}\n            >\n              {option.ccy}\n            </MenuItem>\n          )) : ''}\n        </TextField>\n       </form>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n  valueMoney: state.valueMoney,\n  \n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCcy: ccy => dispatch(selectors.setValueConvert(ccy)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputSelect);","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport * as selectors from '../redux/store';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst InputValue = ({ valueMoney }) => {\n  const classes = useStyles();\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n       <TextField\n          disabled\n          id=\"standard-disabled\"\n          label=\"Result\"\n          type=\"number\"\n          className={classes.textField}\n          margin=\"normal\"\n          value={valueMoney}\n        />\n    </form>\n  )\n}\n\nconst mapStateToProps = state => ({\n  valueMoney: state.result,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n setValue: valueConvert => dispatch(selectors.setValueConvert(valueConvert)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputValue);","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport * as selectors from '../redux/store';\n\nconst useStyles = makeStyles(theme => ({\n button: {\n   margin: theme.spacing(1),\n },\n}));\n\nconst ButtonComponent = ({ handleClickChange }) => {\n  const classes = useStyles();\n  const handleClick = () => {\n    handleClickChange()\n  } \n  return (  \n    <div className=\"box-button\"> \n      <Button\n      variant=\"contained\"\n      color=\"primary\"\n      className={classes.button}\n      endIcon={<Icon>send</Icon>}\n      onClick={handleClick}\n    >\n      Exchange\n    </Button>\n    </div>\n );\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleClickChange: () => dispatch(selectors.handleClick()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonComponent);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport InputSelect from './InputSelect';\nimport InputValue from './InputValue';\nimport InputSelectConvert from './InputSelectConvert';\nimport InputValueConvert from './InputValueConvert';\nimport ButtonComponent from './Button';\n\nconst ConvertMoney = ({ \n  valueMoney,\n  all,\n}) => { \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n        <h1>Currency Conversion Calculator</h1>\n        <div className=\"container__grid\">\n          <InputSelectConvert />\n          <ButtonComponent />\n          <InputSelect />\n          <InputValue />\n          <InputValueConvert />\n        </div>\n        </div>\n        </header>\n      </div>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n  valueMoney: state.valueMoney,\n  all: state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConvertMoney);","import React from 'react';\nimport { connect } from 'react-redux';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Personal from './Personal';\nimport ConvertMoney from './ConvertMoney';\n\nconst Convert = () => { \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Paper>\n        <MenuList>\n          <MenuItem>\n          <NavLink\n              to=\"/convertion\"\n              className=\"page \"\n              activeClassName=\"ClassActive\"\n            >\n                 <ListItemIcon>\n                 <LocalAtmIcon />\n              </ListItemIcon>\n              convertion\n            </NavLink>\n          </MenuItem>\n          <MenuItem>\n          <NavLink\n            to=\"/person\"\n            className=\"page\"\n            activeClassName=\"ClassActive\"\n          >\n            <ListItemIcon>\n            <PermIdentityIcon />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">person page</Typography>\n            </NavLink>\n          </MenuItem>\n        </MenuList>\n      </Paper>\n        <Switch>\n            <Route\n                path=\"/person\"\n                render={() => (\n                  <Personal />\n                )}\n              />\n          <Route\n            path=\"/convertion\"\n            render={() => (\n              <ConvertMoney />\n            )}\n          />\n        </Switch>\n        </header>\n      </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n  valueMoney: state.valueMoney,\n  all: state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Convert);","\nexport const getApi = async() => {\n\tconst response = await fetch(\"https://api.privatbank.ua/p24api/pubinfo?exchange&json&coursid=11\")\n\n\treturn response.json();\n}\n","import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport * as selectors from './redux/store';\nimport Convert from './components/Convert';\nimport { getApi } from './API_fromServer';\n\nclass App extends React.Component { \n  async componentDidMount() {\n    const valueMoney = await getApi()\n      this.props.loadDataValue(valueMoney);\n  }\n \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Convert />\n        </header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  valueMoney: state.valueMoney,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // enableLoading: () => dispatch(loadingAction.enableLoading()),\n  loadDataValue: valueMoney => dispatch(selectors.setDataMoney(valueMoney)),\n  // disableLoading: () => dispatch(loadingAction.disableLoading()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <HashRouter>\n    <App />\n  </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));"],"sourceRoot":""}